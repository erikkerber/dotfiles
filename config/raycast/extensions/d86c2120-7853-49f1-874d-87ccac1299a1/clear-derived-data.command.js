var p=Object.create;var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var l=e=>o(e,"__esModule",{value:!0});var u=(e,r)=>{l(e);for(var i in r)o(e,i,{get:r[i],enumerable:!0})},v=(e,r,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of w(r))!h.call(e,t)&&t!=="default"&&o(e,t,{get:()=>r[t],enumerable:!(i=f(r,t))||i.enumerable});return e},c=e=>v(l(o(e!=null?p(y(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);u(exports,{default:()=>D});var a=c(require("@raycast/api"));var n=c(require("child_process")),m=c(require("util")),s=(0,m.promisify)(n.exec);var d=class{clearDerivedData(){return s("rm -rf ~/Library/Developer/Xcode/DerivedData").then()}clearSwiftPackageManagerCache(){return s("rm -rf ~/Library/Caches/org.swift.swiftpm/repositories").then()}};var D=async()=>{let e=new d,r=await(0,a.showToast)(a.ToastStyle.Animated,"Please wait");try{await e.clearDerivedData(),await r.hide(),await(0,a.showToast)(a.ToastStyle.Success,"Derived Data successfully cleared")}catch(i){console.error(i),await r.hide(),await(0,a.showToast)(a.ToastStyle.Failure,"An error occurred while trying to clear the Derived Data directory")}};0&&(module.exports={});
