var o=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var d=Object.prototype.hasOwnProperty;var p=r=>o(r,"__esModule",{value:!0});var h=(r,e)=>{for(var a in e)o(r,a,{get:e[a],enumerable:!0})},g=(r,e,a,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let c of w(e))!d.call(r,c)&&(a||c!=="default")&&o(r,c,{get:()=>e[c],enumerable:!(n=f(e,c))||n.enumerable});return r};var u=(r=>(e,a)=>r&&r.get(e)||(a=g(p({}),e,1),r&&r.set(e,a),a))(typeof WeakMap!="undefined"?new WeakMap:0);var S={};h(S,{default:()=>y});var t=require("@raycast/api");var l=require("child_process"),m=require("util"),i=(0,m.promisify)(l.exec);var s=class{clearDerivedData(){return i("rm -rf ~/Library/Developer/Xcode/DerivedData").then()}clearSwiftPackageManagerCache(){return i("rm -rf ~/Library/Caches/org.swift.swiftpm/repositories").then()}};var y=async()=>{let r=new s,e=await(0,t.showToast)(t.ToastStyle.Animated,"Please wait");try{await r.clearSwiftPackageManagerCache(),await e.hide(),await(0,t.showToast)(t.ToastStyle.Success,"Swift Package Manager cache successfully cleared")}catch(a){console.error(a),await e.hide(),await(0,t.showToast)(t.ToastStyle.Failure,"An error occurred while trying to clear the Swift Package Manager cache")}};module.exports=u(S);0&&(module.exports={});
